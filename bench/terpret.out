TerpreT benchmark #1: invert

invert :: [Bool] -> [Bool]
-- testing 4 combinations of argument values
-- pruning with 41/51 rules
-- looking through 2 candidates of size 1
-- looking through 1 candidates of size 2
-- looking through 5 candidates of size 3
-- looking through 10 candidates of size 4
-- looking through 17 candidates of size 5
-- looking through 41 candidates of size 6
invert []  =  []
invert (p:ps)  =  not p:invert ps

TerpreT benchmark #2: prepend zero

prependZero :: [Bool] -> [Bool]
-- testing 3 combinations of argument values
-- pruning with 41/51 rules
-- looking through 2 candidates of size 1
-- looking through 1 candidates of size 2
-- looking through 5 candidates of size 3
prependZero ps  =  False:ps

TerpreT benchmark #3: binary decrement

decrement :: [Bool] -> [Bool]
-- testing 3 combinations of argument values
-- pruning with 41/51 rules
-- looking through 2 candidates of size 1
-- looking through 1 candidates of size 2
-- looking through 5 candidates of size 3
-- looking through 10 candidates of size 4
-- looking through 17 candidates of size 5
-- looking through 41 candidates of size 6
-- looking through 86 candidates of size 7
-- looking through 202 candidates of size 8
-- looking through 487 candidates of size 9
decrement []  =  []
decrement (p:ps)  =  not p:(if p then ps else decrement ps)

