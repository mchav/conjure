pow :: Int -> Int -> Int
-- testing 5 combinations of argument values
-- pruning with 14/30 rules
-- looking through 4 candidates of size 1
-- looking through 15 candidates of size 2
-- looking through 47 candidates of size 3
-- looking through 188 candidates of size 4
-- looking through 595 candidates of size 5
-- looking through 2255 candidates of size 6
-- looking through 7917 candidates of size 7
-- looking through 28547 candidates of size 8
-- tested 11964 candidates
pow x 0  =  1
pow x y  =  x * pow x (y - 1)

pow :: Int -> Int -> Int
-- testing 5 combinations of argument values
-- pruning with 15/19 rules
-- looking through 4 candidates of size 1
-- looking through 17 candidates of size 2
-- looking through 60 candidates of size 3
-- looking through 201 candidates of size 4
-- looking through 670 candidates of size 5
-- looking through 2268 candidates of size 6
-- tested 3220 candidates
cannot conjure

