subset :: [Int] -> [Int] -> Bool
-- testing 44 combinations of argument values
-- pruning with 30/40 rules
-- looking through 0 candidates of size 1
-- looking through 2 candidates of size 2
-- looking through 3 candidates of size 3
-- looking through 11 candidates of size 4
-- looking through 64 candidates of size 5
-- looking through 247 candidates of size 6
-- looking through 750 candidates of size 7
-- looking through 2349 candidates of size 8
-- looking through 8305 candidates of size 9
-- looking through 30407 candidates of size 10
-- looking through 107700 candidates of size 11
subset [] xs  =  elem (head xs) xs
subset (x:xs) ys  =  elem x ys && subset xs ys

subset :: [Int] -> [Int] -> Bool
-- testing 44 combinations of argument values
-- pruning with 3/3 rules
-- looking through 0 candidates of size 1
-- looking through 0 candidates of size 2
-- looking through 2 candidates of size 3
-- looking through 6 candidates of size 4
-- looking through 2 candidates of size 5
subset xs ys  =  sort xs `isSubsequenceOf` sort ys

