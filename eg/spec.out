square :: Int -> Int
-- pruning with 14/25 rules
-- looking through 3 candidates of size 1
-- looking through 3 candidates of size 2
-- looking through 8 candidates of size 3
-- tested 11 candidates
square x  =  x * x

square :: Int -> Int
-- pruning with 14/25 rules
-- looking through 3 candidates of size 1
-- looking through 3 candidates of size 2
-- looking through 8 candidates of size 3
-- tested 11 candidates
square x  =  x * x

sum :: [Int] -> Int
-- pruning with 4/8 rules
-- looking through 1 candidates of size 1
-- looking through 2 candidates of size 2
-- looking through 3 candidates of size 3
-- looking through 4 candidates of size 4
-- looking through 7 candidates of size 5
-- tested 11 candidates
sum []  =  0
sum (x:xs)  =  x + sum xs

(++) :: [Int] -> [Int] -> [Int]
-- pruning with 3/3 rules
-- looking through 2 candidates of size 1
-- looking through 4 candidates of size 2
-- looking through 11 candidates of size 3
-- looking through 34 candidates of size 4
-- looking through 102 candidates of size 5
-- looking through 247 candidates of size 6
-- tested 239 candidates
[] ++ xs  =  xs
(x:xs) ++ ys  =  x:(xs ++ ys)

