mem :: Int -> Tree -> Bool
-- testing 360 combinations of argument values
-- pruning with 20/30 rules
-- looking through 1 candidates of size 1
-- looking through 0 candidates of size 2
-- looking through 0 candidates of size 3
-- looking through 8 candidates of size 4
-- looking through 0 candidates of size 5
-- looking through 0 candidates of size 6
-- looking through 0 candidates of size 7
-- looking through 60 candidates of size 8
-- looking through 120 candidates of size 9
-- looking through 0 candidates of size 10
-- looking through 452 candidates of size 11
-- looking through 424 candidates of size 12
-- looking through 3840 candidates of size 13
-- looking through 3840 candidates of size 14
-- looking through 18272 candidates of size 15
-- tested 18059 candidates
mem x Leaf  =  False
mem x (Node t1 y t2)  =  x == y || (if x < y then mem x t1 else mem x t2)

insert :: Int -> Tree -> Tree
-- testing 360 combinations of argument values
-- pruning with 6/7 rules
-- looking through 2 candidates of size 1
-- looking through 2 candidates of size 2
-- looking through 0 candidates of size 3
-- looking through 10 candidates of size 4
-- looking through 21 candidates of size 5
-- looking through 0 candidates of size 6
-- looking through 118 candidates of size 7
-- looking through 239 candidates of size 8
-- looking through 216 candidates of size 9
-- looking through 2204 candidates of size 10
-- looking through 3651 candidates of size 11
-- looking through 8280 candidates of size 12
-- tested 14743 candidates
cannot conjure

before :: Int -> Tree -> Tree
-- testing 360 combinations of argument values
-- pruning with 5/6 rules
-- looking through 2 candidates of size 1
-- looking through 2 candidates of size 2
-- looking through 0 candidates of size 3
-- looking through 10 candidates of size 4
-- looking through 18 candidates of size 5
-- looking through 0 candidates of size 6
-- looking through 112 candidates of size 7
-- looking through 216 candidates of size 8
-- looking through 216 candidates of size 9
-- looking through 2096 candidates of size 10
-- looking through 3384 candidates of size 11
-- looking through 8064 candidates of size 12
-- tested 14120 candidates
cannot conjure

before :: Int -> Tree -> Tree
-- testing 360 combinations of argument values
-- pruning with 1/2 rules
-- looking through 2 candidates of size 1
-- looking through 2 candidates of size 2
-- looking through 0 candidates of size 3
-- looking through 10 candidates of size 4
-- looking through 18 candidates of size 5
-- looking through 0 candidates of size 6
-- looking through 94 candidates of size 7
-- looking through 312 candidates of size 8
-- looking through 72 candidates of size 9
-- looking through 2096 candidates of size 10
-- looking through 6336 candidates of size 11
-- looking through 3888 candidates of size 12
-- tested 12830 candidates
cannot conjure

union :: Tree -> Tree -> Tree
-- testing 360 combinations of argument values
-- pruning with 2/2 rules
-- looking through 3 candidates of size 1
-- looking through 12 candidates of size 2
-- looking through 44 candidates of size 3
-- looking through 84 candidates of size 4
-- looking through 784 candidates of size 5
-- looking through 1080 candidates of size 6
-- tested 2007 candidates
cannot conjure

