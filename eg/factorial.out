factorial :: Int -> Int
-- testing 4 combinations of argument values
-- pruning with 27/65 rules
-- looking through 3 candidates of size 1
-- looking through 3 candidates of size 2
-- looking through 8 candidates of size 3
-- looking through 15 candidates of size 4
-- looking through 51 candidates of size 5
-- looking through 93 candidates of size 6
-- looking through 421 candidates of size 7
-- tested 219 candidates
factorial 0  =  1
factorial x  =  x * factorial (x - 1)

factorial :: Int -> Int
-- testing 4 combinations of argument values
-- pruning with 32/72 rules
-- looking through 3 candidates of size 1
-- looking through 3 candidates of size 2
-- looking through 8 candidates of size 3
-- looking through 15 candidates of size 4
-- looking through 51 candidates of size 5
-- looking through 133 candidates of size 6
-- tested 108 candidates
factorial x  =  foldr (*) 1 [1..x]

