factorial :: Int -> Int
-- testing 6 combinations of argument values
-- looking through 2 candidates of size 1
-- looking through 1 candidates of size 2
-- looking through 0 candidates of size 3
-- looking through 2 candidates of size 4
factorial n  =  product (enumFromTo 1 n)

factorial :: Int -> Int
-- testing 6 combinations of argument values
-- looking through 3 candidates of size 1
-- looking through 4 candidates of size 2
-- looking through 7 candidates of size 3
-- looking through 22 candidates of size 4
-- looking through 50 candidates of size 5
-- looking through 145 candidates of size 6
-- looking through 466 candidates of size 7
-- looking through 1263 candidates of size 8
-- looking through 3856 candidates of size 9
-- looking through 11131 candidates of size 10
factorial n  =  if n == 0 then 1 else n * factorial (dec n)

