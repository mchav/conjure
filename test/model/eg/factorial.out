factorial :: Int -> Int
-- testing 6 combinations of argument values
-- looking through 2/2 candidates of size 1
-- looking through 2/2 candidates of size 2
-- looking through 0/0 candidates of size 3
-- looking through 2/2 candidates of size 4
factorial n  =  product (enumFromTo 1 n)

factorial :: Int -> Int
-- testing 6 combinations of argument values
-- looking through 3/3 candidates of size 1
-- looking through 5/5 candidates of size 2
-- looking through 8/8 candidates of size 3
-- looking through 28/28 candidates of size 4
-- looking through 64/64 candidates of size 5
-- looking through 193/193 candidates of size 6
-- looking through 683/683 candidates of size 7
-- looking through 2020/2020 candidates of size 8
-- looking through 7316/7316 candidates of size 9
-- looking through 23579/23579 candidates of size 10
factorial n  =  if 0 == n then 1 else n * factorial (dec n)

