sum :: [Int] -> Int
-- testing 3 combinations of argument values
-- looking through 1 candidates of size 1
-- looking through 1 candidates of size 2
-- looking through 2 candidates of size 3
-- looking through 2 candidates of size 4
-- looking through 3 candidates of size 5
-- looking through 6 candidates of size 6
-- looking through 13 candidates of size 7
-- looking through 23 candidates of size 8
-- looking through 39 candidates of size 9
-- looking through 63 candidates of size 10
sum xs  =  if null xs then 0 else head xs + sum (tail xs)

(++) :: [Int] -> [Int] -> [Int]
-- testing 3 combinations of argument values
-- looking through 2 candidates of size 1
-- looking through 2 candidates of size 2
-- looking through 5 candidates of size 3
-- looking through 17 candidates of size 4
-- looking through 37 candidates of size 5
-- looking through 101 candidates of size 6
-- looking through 275 candidates of size 7
-- looking through 723 candidates of size 8
-- looking through 1789 candidates of size 9
-- looking through 4421 candidates of size 10
-- looking through 10743 candidates of size 11
xs ++ ys  =  if null xs then ys else head xs:(tail xs ++ ys)

