sum :: [Int] -> Int
-- testing 3 combinations of argument values
-- looking through 1 candidates of size 1
-- looking through 1 candidates of size 2
-- looking through 1 candidates of size 3
-- looking through 1 candidates of size 4
-- looking through 2 candidates of size 5
-- looking through 4 candidates of size 6
-- looking through 9 candidates of size 7
-- looking through 18 candidates of size 8
-- looking through 31 candidates of size 9
-- looking through 54 candidates of size 10
sum xs  =  if null xs then 0 else head xs + sum (tail xs)

(++) :: [Int] -> [Int] -> [Int]
-- testing 3 combinations of argument values
-- looking through 2 candidates of size 1
-- looking through 2 candidates of size 2
-- looking through 2 candidates of size 3
-- looking through 6 candidates of size 4
-- looking through 14 candidates of size 5
-- looking through 34 candidates of size 6
-- looking through 90 candidates of size 7
-- looking through 286 candidates of size 8
-- looking through 754 candidates of size 9
-- looking through 1930 candidates of size 10
-- looking through 4874 candidates of size 11
xs ++ ys  =  if null xs then ys else head xs:(tail xs ++ ys)

