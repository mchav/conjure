sum :: [Int] -> Int
-- testing 3 combinations of argument values
-- looking through 1/1 candidates of size 1
-- looking through 2/2 candidates of size 2
-- looking through 2/2 candidates of size 3
-- looking through 2/2 candidates of size 4
-- looking through 5/5 candidates of size 5
-- looking through 10/10 candidates of size 6
-- looking through 23/23 candidates of size 7
-- looking through 46/46 candidates of size 8
-- looking through 92/92 candidates of size 9
-- looking through 189/189 candidates of size 10
sum xs  =  if null xs then 0 else head xs + sum (tail xs)

(++) :: [Int] -> [Int] -> [Int]
-- testing 3 combinations of argument values
-- looking through 2/2 candidates of size 1
-- looking through 2/2 candidates of size 2
-- looking through 6/6 candidates of size 3
-- looking through 18/18 candidates of size 4
-- looking through 38/38 candidates of size 5
-- looking through 110/110 candidates of size 6
-- looking through 334/334 candidates of size 7
-- looking through 1018/1018 candidates of size 8
-- looking through 2966/2966 candidates of size 9
-- looking through 8662/8662 candidates of size 10
-- looking through 26166/26166 candidates of size 11
xs ++ ys  =  if null xs then ys else head xs:(tail xs ++ ys)

