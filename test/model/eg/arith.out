double :: Int -> Int
-- testing 4 combinations of argument values
-- looking through 3/3 candidates of size 1
-- looking through 3/3 candidates of size 2
-- looking through 5/5 candidates of size 3
double x  =  x + x

add :: Int -> Int -> Int
-- testing 4 combinations of argument values
-- looking through 4/4 candidates of size 1
-- looking through 0/0 candidates of size 2
-- looking through 29/29 candidates of size 3
add x y  =  y + x

square :: Int -> Int
-- testing 3 combinations of argument values
-- looking through 3/3 candidates of size 1
-- looking through 3/3 candidates of size 2
-- looking through 5/5 candidates of size 3
square x  =  x * x

tnpo :: Int -> Int
-- testing 3 combinations of argument values
-- looking through 3/3 candidates of size 1
-- looking through 3/3 candidates of size 2
-- looking through 5/5 candidates of size 3
-- looking through 20/20 candidates of size 4
-- looking through 13/13 candidates of size 5
-- looking through 100/100 candidates of size 6
-- looking through 42/42 candidates of size 7
tnpo x  =  1 + (x + (x + x))

